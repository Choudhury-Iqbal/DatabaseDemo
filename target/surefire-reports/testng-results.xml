<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="2544" started-at="2022-03-01T14:55:08Z" finished-at="2022-03-01T14:55:11Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="2544" started-at="2022-03-01T14:55:08Z" finished-at="2022-03-01T14:55:11Z">
      <class name="testFolder.DemoTest">
        <test-method status="PASS" signature="startReport()[pri:0, instance:testFolder.DemoTest@32a068d1]" name="startReport" is-config="true" duration-ms="272" started-at="2022-03-01T14:55:08Z" finished-at="2022-03-01T14:55:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method status="PASS" signature="setup()[pri:0, instance:testFolder.DemoTest@32a068d1]" name="setup" is-config="true" duration-ms="549" started-at="2022-03-01T14:55:08Z" finished-at="2022-03-01T14:55:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="countCountryTest(java.lang.String, java.lang.String)[pri:0, instance:testFolder.DemoTest@32a068d1]" name="countCountryTest" duration-ms="34" started-at="2022-03-01T14:55:10Z" data-provider="countCountryDataProvider" finished-at="2022-03-01T14:55:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SELECT count(*)  FROM country.country_db]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- countCountryTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testFolder.DemoTest@32a068d1]" name="getResult" is-config="true" duration-ms="4" started-at="2022-03-01T14:55:10Z" finished-at="2022-03-01T14:55:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=countCountryTest status=SUCCESS method=DemoTest.countCountryTest(java.lang.String, java.lang.String)[pri:0, instance:testFolder.DemoTest@32a068d1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="FAIL" signature="findCountryCapitalTest(java.lang.String, java.lang.String)[pri:0, instance:testFolder.DemoTest@32a068d1]" name="findCountryCapitalTest" duration-ms="3" started-at="2022-03-01T14:55:10Z" data-provider="capitalDataProvider" finished-at="2022-03-01T14:55:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[SELECT country_capital FROM country.country_db where country_name = 'England']]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Paris]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Paris] but found [London]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Paris] but found [London]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at testFolder.DemoTest.findCountryCapitalTest(DemoTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- findCountryCapitalTest -->
        <test-method status="PASS" signature="getResult(org.testng.ITestResult)[pri:0, instance:testFolder.DemoTest@32a068d1]" name="getResult" is-config="true" duration-ms="1" started-at="2022-03-01T14:55:10Z" finished-at="2022-03-01T14:55:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=findCountryCapitalTest status=FAILURE method=DemoTest.findCountryCapitalTest(java.lang.String, java.lang.String)[pri:0, instance:testFolder.DemoTest@32a068d1] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:testFolder.DemoTest@32a068d1]" name="tearDown" is-config="true" duration-ms="0" started-at="2022-03-01T14:55:10Z" finished-at="2022-03-01T14:55:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="endReport()[pri:0, instance:testFolder.DemoTest@32a068d1]" name="endReport" is-config="true" duration-ms="512" started-at="2022-03-01T14:55:10Z" finished-at="2022-03-01T14:55:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testFolder.DemoTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
